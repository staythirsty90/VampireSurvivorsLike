{
  "name": "com.unity.entities",
  "displayName": "Entities",
  "version": "1.0.16",
  "unity": "2022.3",
  "unityRelease": "0f1",
  "dependencies": {
    "com.unity.burst": "1.8.8",
    "com.unity.serialization": "3.1.1",
    "com.unity.collections": "2.1.4",
    "com.unity.mathematics": "1.2.6",
    "com.unity.modules.assetbundle": "1.0.0",
    "com.unity.modules.audio": "1.0.0",
    "com.unity.modules.unitywebrequest": "1.0.0",
    "com.unity.test-framework.performance": "3.0.2",
    "com.unity.nuget.mono-cecil": "1.11.4",
    "com.unity.scriptablebuildpipeline": "1.20.2",
    "com.unity.profiling.core": "1.0.2"
  },
  "description": "The Entities package provides a modern Entity Component System (ECS) implementation with a basic set of systems and components made for Unity.",
  "keywords": [
    "entities",
    "dots",
    "unity"
  ],
  "_upm": {
    "changelog": "### Added\n\n* checks to see if an exclusive transaction is active while scheduling a job.\n\n### Changed\n\n* Clarified in TransformHelpers API documentation that matrices are expected to be affine.\n* Updated Burst dependency to version 1.8.8\n\n### Removed\n\n* Alignment attribute is removed when displaying component attributes in Inspector window.\n* Changelog entry for * Added `EntityCommandBuffer.MoveComponent<T>(Entity src, Entity dst)` this will be added in an upcoming minor version.\n\n### Fixed\n\n* Companion objects appearing in the GameObject hierarchy for a frame\n* `SystemAPI.Query<EnabledRefRW<MyEnabledComponent>>()` can now be used with `.WithNone<MyEnabledComponent>()`, `.WithAny<MyEnabledComponent>()` and `.WithDisabled<MyEnabledComponent>()`.\n* \"AssetDatabase.RegisterCustomDependency are restricted during importing\" exception thrown by the EntityClientSetting in the OnDisable method, when using 2023.2 or newer.\n* The entities journaling window will no longer show an error when a system handle cannot be resolved; this is not an error and simply means that no system was executing when that event was recorded.\n* Search window for Systems now shows results from all the worlds instead of default ones.\n* Special handling for prefab entity instantiated from prefab asset at runtime.\n* Entities Hierarchy: fix an issue that can happen when copying scene entities from different worlds.\n* Entities Hierarchy: Fix memory leak in hierarchy backend.\n* Entities Hierarchy: Only remove subscene nodes when they are actually not used anymore.\n* Fixed `isReadOnly` being ignored in `EntityManager.GetBuffer`.\n* Save unsaved opened scenes in the Editor before building a player. (fix issue: Error building Player: InvalidOperationException: ContentCatalogBuildUtility.BuildContentArchives failed with status 'UnsavedChanges')\n* Fixed memory leak in some cases when an `EntityCommandBuffer` containing `DynamicBuffer` commands was disposed before it was played back.\n* `World.AddSystemManaged<T>(T system)` no longer throws an exception if the system type `T` is not registered. Instead, it registers the type just in time. This matches the existing behavior of `World.CreateSystemManaged()`.\n* Fixed a hash mismatch on DependOnParentTransformHierarchy\n* Users can now specify duplicate components in the same `IJobEntity.Execute()` method, insofar as exactly one of them is wrapped in `EnabledRef<T>`.\n* You can now use SystemAPI.GetBufferTypeHandle and SystemAPI.GetSharedComponentTypeHandle with unspecified types coming from systems. Like a `MySystem<TUnspecifiedType>` using SystemAPI.GetBufferTypeHandle<TUnspecifiedType>."
  },
  "upmCi": {
    "footprint": "64aa5c5280ce107e522c3c3830258b78bf68bc07"
  },
  "documentationUrl": "https://docs.unity3d.com/Packages/com.unity.entities@1.0/manual/index.html",
  "repository": {
    "url": "https://github.cds.internal.unity3d.com/unity/dots.git",
    "type": "git",
    "revision": "8f9a34fef643cca2b5f84470ac61c171c1831168"
  }
}
